{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\n// import React, { Component } from \"react\";\n// import \"./Dashborad.css\";\n// import { getAllUser, getAllMessages } from \"../services/userServices\";\n// import apiFunc from './ApiFunc'\n// import message from '../components/message'\n// import openSocket from \"socket.io-client\";\n// const socket = openSocket(\"http://localhost:7000\");\n//  class Dashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       userArray: [],\n//       messageArray: [],\n//       messages: \"\",\n//       ReceiverId:\"\",\n//       ReceiverName:\"\"\n//     };\n//   }\n//   setRedirect = () => {\n//     this.setState({\n//       redirect: true\n//     })\n//   }\n//   renderRedirect = () => {\n//     if (this.state.redirect) {\n//         var path = '/'\n//         this.props.history.push(path)\n//     }\n//   }\n//   componentDidMount() {\n//     this.getUser();\n//     this.getUserMessages();\n//     apiFunc.socketCon()\n//   }\n//   getUser() {\n//     getAllUser().then(res => {\n//       console.log(\" response \", res.data.data);\n//       var users = res.data.data;\n//       console.log(\"users list\", users);\n//       this.setState({ userArray: users });\n//       console.log(\"in state\", this.state);\n//     });\n//   }\n//   person = key => {\n//     console.log(\"on click\", key);\n//     localStorage.setItem(\"receiverName\", key.firstName);\n//     localStorage.setItem(\"receiverLastName\", key.lastName);\n//     localStorage.setItem(\"receiverid\", key._id);\n//     localStorage.setItem(\"receiveremail\", key.email);\n//     this.getUserMessages();\n//   };\n//   getUserMessages() {\n//     getAllMessages()\n//       .then(res => {\n//         console.log(\"all messges\", res.data.data);\n//         var messages = res.data.data;\n//         console.log(\" user messages\", messages);\n//         this.setState({ messageArray: messages });\n//         console.log(\"in message states\", this.state);\n//       })\n//       .catch(err => {\n//         console.log(\" error \", err);\n//       });\n//   }\n//   getReceiverId() {\n//     console.log(\"send botton clicked..\");\n//     // let receiverId = localStorage.getItem('receiverid');\n//     // let receiver_name = localStorage.getItem('receiverName');\n//     // console.log(\"receiver name\", receiver_name);\n//     // console.log(\"receiverID\", receiverId);\n//     // let senderemail=localStorage.getItem('senderEmail')\n//     // let senderid= localStorage.getItem('senderId');\n//     // console.log(\"sendermail..\",senderemail);\n//     // console.log(\"senderId..\",senderid);\n//     let sendObject = {\n//       SenderId: localStorage.getItem(\"SenderId\"),\n//       senderemail: localStorage.getItem(\"senderEmail\"),\n//       // ReceiverId: this.state.ReceiverId,\n//       // ReceiverName: this.state.ReceiverName,\n//       Messages: this.state.messages\n//     };\n//     console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n//   }\n//   render() {\n//     const printuser = this.state.userArray.map(key => {\n//       return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n//     });\n//     console.log(printuser);\n//     return (\n//       <div className=\"mainchatdiv\">\n//         <div id=\"appBar\">\n//           <p className=\"p\">Chat Application</p>\n//           <button className=\"LogOutButton\"onClick={() => this.logOutClick()}>Log Out</button>\n//         </div>\n//         <div className=\"chatApp\">\n//           <div className=\"list-username\">\n//             <div className=\"users\">Username</div>\n//             <div className=\"List\">\n//               List\n//               {printuser}\n//             </div>\n//           </div>\n//           <div className=\"chat-box-width\">\n//             <div className=\"ChatBox\">chat box</div>\n//             <div className=\"inputStyle\">\n//               <input className=\"input\" placeholder=\" type here... \"></input>\n//               <button\n//                 className=\"sendButton\"\n//                 value={this.state.messageArray.id}\n//                 onClick={this.getReceiverId}\n//               >\n//                 send\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from 'react';\nimport './.css';\nimport { getallusers } from '../services/userService';\nimport { getAllMessages } from '../services/userService';\nimport Message from '../components/Message';\nimport apiFunc from './ApiFunc'; // import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = '/';\n        this.props.history.push(path);\n      }\n    };\n\n    this.getUsers = () => {\n      getallusers().then(res => {\n        console.log(\"respnse in chat app get all users--> \", res);\n        console.log(\"only users------>\", res.data.data);\n        this.setState({\n          Names: res.data.data\n        });\n      }).catch(err => {\n        console.log(\"error in login--> \", err);\n      });\n    };\n\n    this.getMessages = () => {\n      getAllMessages().then(res => {\n        console.log(\"respnse in chat app get all messages--> \", res);\n        console.log(\"User data with messages------>\", res.data.data);\n        this.setState({\n          Messages: res.data.data\n        });\n      }).catch(err => {\n        console.log(\"error in login--> \", err);\n      });\n    };\n\n    this.handlechangeall = event => {\n      // console.log(event.target);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      Names: [],\n      messages: \"\",\n      ReceiverId: \"\",\n      ReceiverName: \"\",\n      Messages: [],\n      ReceivedMessages: [],\n      redirect: false,\n      flag: false\n    };\n  }\n\n  async handleReceiverClick(FirstName, _id) {\n    await this.setState({\n      ReceiverId: _id,\n      ReceiverName: FirstName\n    });\n    this.setState({\n      flag: true\n    });\n    console.log(\"Receiver data\" + this.state.ReceiverId + \" \" + this.state.ReceiverName);\n  }\n\n  componentDidMount() {\n    // this.socketConnection()\n    apiFunc.socketCon();\n    this.getUsers();\n    this.getMessages();\n    apiFunc.receivedMsg((error, result) => {\n      if (result) {\n        console.log(\"result is back...\", result);\n        var resultArray = []; // resultArray.push(result);\n\n        resultArray = this.state.Messages;\n        resultArray.push(result);\n        this.setState({\n          Messages: resultArray\n        });\n        console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n      } else {\n        console.log(\"Error in received message--->\", error);\n      }\n    });\n  }\n\n  sendClick() {\n    // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n    let sendObject = {\n      SenderId: localStorage.getItem('SenderId'),\n      SenderName: localStorage.getItem('SenderName'),\n      ReceiverId: this.state.ReceiverId,\n      ReceiverName: this.state.ReceiverName,\n      Messages: this.state.messages\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n    apiFunc.Emitfun(sendObject);\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"sendername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, localStorage.getItem('SenderName')), React.createElement(\"div\", {\n      id: \"headText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Chat Application\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"button\", {\n      class: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Log Out\"))), React.createElement(\"div\", {\n      className: \"messageField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"sideNav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, mapUserResult), this.state.flag ? React.createElement(\"div\", {\n      id: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ReceiverName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"ReceiverNameText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, this.state.ReceiverName, \".\")), React.createElement(\"div\", {\n      id: \"chatField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, mapMessageResult), React.createElement(\"div\", {\n      id: \"inputField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"input\" // onfocus=\"this.value=''\"\n      ,\n      onChange: this.handlechangeall,\n      name: \"messages\",\n      value: this.state.messages,\n      placeholder: \"type here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"sendButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"send\",\n      onClick: () => this.sendClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Send\")))) : //  null\n    React.createElement(\"img\", {\n      src: require('../Assets/img1.jpg'),\n      alt: \"Logo\",\n      id: \"imageFlex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getallusers","getAllMessages","Message","apiFunc","Dashboard","constructor","props","setRedirect","setState","redirect","renderRedirect","state","path","history","push","getUsers","then","res","console","log","data","Names","catch","err","getMessages","Messages","handlechangeall","event","target","name","value","messages","ReceiverId","ReceiverName","ReceivedMessages","flag","handleReceiverClick","FirstName","_id","componentDidMount","socketCon","receivedMsg","error","result","resultArray","JSON","stringify","sendClick","sendObject","SenderId","localStorage","getItem","SenderName","Emitfun","logOutClick","mapUserResult","mapMessageResult","require"],"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","sourcesContent":["// import React, { Component } from \"react\";\n// import \"./Dashborad.css\";\n// import { getAllUser, getAllMessages } from \"../services/userServices\";\n// import apiFunc from './ApiFunc'\n// import message from '../components/message'\n\n// import openSocket from \"socket.io-client\";\n// const socket = openSocket(\"http://localhost:7000\");\n\n//  class Dashboard extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       userArray: [],\n//       messageArray: [],\n//       messages: \"\",\n//       ReceiverId:\"\",\n//       ReceiverName:\"\"\n\n//     };\n//   }\n\n//   setRedirect = () => {\n//     this.setState({\n//       redirect: true\n//     })\n    \n//   }\n\n\n//   renderRedirect = () => {\n//     if (this.state.redirect) {\n//         var path = '/'\n//         this.props.history.push(path)\n//     }\n//   }\n\n//   componentDidMount() {\n//     this.getUser();\n//     this.getUserMessages();\n//     apiFunc.socketCon()\n//   }\n\n//   getUser() {\n//     getAllUser().then(res => {\n//       console.log(\" response \", res.data.data);\n//       var users = res.data.data;\n//       console.log(\"users list\", users);\n//       this.setState({ userArray: users });\n//       console.log(\"in state\", this.state);\n//     });\n//   }\n\n//   person = key => {\n//     console.log(\"on click\", key);\n//     localStorage.setItem(\"receiverName\", key.firstName);\n//     localStorage.setItem(\"receiverLastName\", key.lastName);\n//     localStorage.setItem(\"receiverid\", key._id);\n//     localStorage.setItem(\"receiveremail\", key.email);\n//     this.getUserMessages();\n//   };\n\n//   getUserMessages() {\n//     getAllMessages()\n//       .then(res => {\n//         console.log(\"all messges\", res.data.data);\n//         var messages = res.data.data;\n//         console.log(\" user messages\", messages);\n//         this.setState({ messageArray: messages });\n//         console.log(\"in message states\", this.state);\n//       })\n\n//       .catch(err => {\n//         console.log(\" error \", err);\n//       });\n//   }\n\n//   getReceiverId() {\n//     console.log(\"send botton clicked..\");\n//     // let receiverId = localStorage.getItem('receiverid');\n//     // let receiver_name = localStorage.getItem('receiverName');\n//     // console.log(\"receiver name\", receiver_name);\n//     // console.log(\"receiverID\", receiverId);\n//     // let senderemail=localStorage.getItem('senderEmail')\n//     // let senderid= localStorage.getItem('senderId');\n//     // console.log(\"sendermail..\",senderemail);\n//     // console.log(\"senderId..\",senderid);\n//     let sendObject = {\n//       SenderId: localStorage.getItem(\"SenderId\"),\n//       senderemail: localStorage.getItem(\"senderEmail\"),\n//       // ReceiverId: this.state.ReceiverId,\n//       // ReceiverName: this.state.ReceiverName,\n//       Messages: this.state.messages\n//     };\n//     console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n//   }\n\n//   render() {\n//     const printuser = this.state.userArray.map(key => {\n//       return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n//     });\n//     console.log(printuser);\n\n//     return (\n//       <div className=\"mainchatdiv\">\n//         <div id=\"appBar\">\n//           <p className=\"p\">Chat Application</p>\n//           <button className=\"LogOutButton\"onClick={() => this.logOutClick()}>Log Out</button>\n//         </div>\n//         <div className=\"chatApp\">\n//           <div className=\"list-username\">\n//             <div className=\"users\">Username</div>\n//             <div className=\"List\">\n//               List\n//               {printuser}\n//             </div>\n//           </div>\n//           <div className=\"chat-box-width\">\n//             <div className=\"ChatBox\">chat box</div>\n//             <div className=\"inputStyle\">\n//               <input className=\"input\" placeholder=\" type here... \"></input>\n//               <button\n//                 className=\"sendButton\"\n//                 value={this.state.messageArray.id}\n//                 onClick={this.getReceiverId}\n//               >\n//                 send\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from 'react';\nimport './.css'\nimport { getallusers } from '../services/userService'\nimport { getAllMessages } from '../services/userService'\nimport Message from '../components/Message'\nimport apiFunc from './ApiFunc'\n\n// import TextField from '@material-ui/core/TextField';\n// import Button from '@material-ui/core/Button';\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            Names: [],\n            messages: \"\",\n            ReceiverId: \"\",\n            ReceiverName: \"\",\n            Messages: [],\n            ReceivedMessages: [],\n            redirect: false,\n            flag:false\n        }\n    }\n\n    setRedirect = () => {\n        this.setState({\n          redirect: true\n        })\n        \n      }\n\n\n      renderRedirect = () => {\n        if (this.state.redirect) {\n            var path = '/'\n            this.props.history.push(path)\n        }\n      }\n\n      \n\n    async handleReceiverClick(FirstName, _id) {\n       \n         \n\n        await this.setState({\n            ReceiverId: _id,\n            ReceiverName: FirstName\n        })\n\n        this.setState({flag:true});\n\n\n        console.log(\"Receiver data\" + this.state.ReceiverId + \" \" + this.state.ReceiverName);\n\n\n\n    }\n\n    componentDidMount() {\n\n\n\n        // this.socketConnection()\n        apiFunc.socketCon()\n\n        this.getUsers()\n      \n        this.getMessages()\n\n        apiFunc.receivedMsg((error, result) => {\n\n            if (result) {\n\n                console.log(\"result is back...\", result);\n\n\n                var resultArray = [];\n                // resultArray.push(result);\n                resultArray = this.state.Messages;\n\n                resultArray.push(result)\n\n                this.setState({\n                    Messages: resultArray\n                })\n\n                console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n\n\n            }\n            else {\n                console.log(\"Error in received message--->\", error);\n\n            }\n        })\n\n\n\n    }\n\n    getUsers = () => {\n        getallusers().then((res) => {\n            console.log(\"respnse in chat app get all users--> \", res)\n            console.log(\"only users------>\", res.data.data);\n\n            this.setState({\n                Names: res.data.data\n            })\n        }).catch((err) => {\n            console.log(\"error in login--> \", err)\n        })\n    }\n\n    getMessages = () => {\n        getAllMessages().then((res) => {\n            console.log(\"respnse in chat app get all messages--> \", res)\n            console.log(\"User data with messages------>\", res.data.data);\n\n            this.setState({\n                Messages: res.data.data\n            })\n        }).catch((err) => {\n            console.log(\"error in login--> \", err)\n        })\n    }\n\n    handlechangeall = (event) => {\n\n        // console.log(event.target);\n\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    sendClick() {\n\n        // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n        let sendObject = {\n            SenderId: localStorage.getItem('SenderId'),\n            SenderName: localStorage.getItem('SenderName'),\n            ReceiverId: this.state.ReceiverId,\n            ReceiverName: this.state.ReceiverName,\n            Messages: this.state.messages\n        }\n\n\n\n        console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n\n        apiFunc.Emitfun(sendObject);\n\n\n\n        return (\n\n            <div className=\"mainchatdiv\">\n                <div id=\"header\">\n                    <div id=\"sendername\">{localStorage.getItem('SenderName')}</div>\n                    <div id=\"headText\">Chat Application</div>\n                    <div>\n                    {this.renderRedirect()}\n                        <button class=\"LogOutButton\" onClick={() => this.logOutClick()}>Log Out</button>\n                    </div>\n                </div>\n                <div className=\"messageField\">\n                    <div class=\"sideNav\">\n\n                        {mapUserResult}\n\n\n\n                    </div>\n                    {this.state.flag?\n                    <div id=\"field\">\n                          \n                        <div id=\"ReceiverName\">\n                            <div id=\"ReceiverNameText\">{this.state.ReceiverName}.</div>\n                        </div>\n                        <div id=\"chatField\">\n\n                            {mapMessageResult}\n                        </div>\n\n                     \n                         <div id='inputField'>\n                         <input class=\"input\"\n                             // onfocus=\"this.value=''\"\n                             onChange={this.handlechangeall}\n                             name=\"messages\"\n                             value={this.state.messages}\n                             placeholder=\"type here\" ></input>\n                         <div className=\"sendButton\">\n                             <button id=\"send\" onClick={() => this.sendClick()}>Send</button>\n             \n                         </div>\n                     </div>\n                     </div>\n                     :\n                    //  null\n                    <img src = {require('../Assets/img1.jpg')} alt = \"Logo\" id = \"imageFlex\"/>\n                    \n                    }\n\n                </div>\n\n            </div>\n\n\n        )\n    }\n}\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}