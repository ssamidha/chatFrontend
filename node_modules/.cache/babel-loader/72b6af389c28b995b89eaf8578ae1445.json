{"ast":null,"code":"import _defineProperty from \"/home/admin1/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/admin1/frontend/src/components/ResetPassword.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//resetpassword\nimport React, { Component } from \"react\";\nimport { resetpassword } from \"../services/userServices\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let isError = false;\n      const errors = {\n        passwordError: \"\"\n      };\n\n      if (this.state.password.length < 6 || this.state.password.length > 12) {\n        isError = true;\n        errors.passwordError = \"Password length should greater than 6 and less than 12\";\n      }\n\n      this.setState(_objectSpread({}, this.state, {}, errors));\n      console.log(\"In validate----->\" + this.state);\n      return isError;\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = \"/\";\n        this.props.history.push(path);\n      }\n    };\n\n    this.handlechangeall = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmitButton = event => {\n      event.preventDefault();\n      this.validate();\n      const err = this.validate();\n      var resetData = {};\n      resetData.password = this.state.password;\n      console.log(\"reset data--> \", resetData);\n      let resetToken = this.props.match.params.token;\n      console.log(resetToken);\n      resetpassword(resetData, resetToken).then(res => {\n        console.log(\"response in reset password--> \", res);\n        alert(\"Password has been reseted\");\n        this.setRedirect();\n      }).catch(err => {\n        console.log(\"error in reset--> \", err);\n      });\n\n      if (!err) {\n        // clear form\n        this.setState({\n          password: \"\",\n          passwordError: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      password: \"\",\n      passwordError: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    console.log(this.props.match.params.id);\n    return React.createElement(\"div\", {\n      className: \"maindiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlesubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \" Reset Password \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handlechangeall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.passwordError), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(Button, {\n      id: \"signinButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmitButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/admin1/frontend/src/components/ResetPassword.jsx"],"names":["React","Component","resetpassword","TextField","Button","ResetPassword","constructor","props","validate","isError","errors","passwordError","state","password","length","setState","console","log","setRedirect","redirect","renderRedirect","path","history","push","handlechangeall","event","target","name","value","handleSubmitButton","preventDefault","err","resetData","resetToken","match","params","token","then","res","alert","catch","render","id","handlesubmit","fontSize","color"],"mappings":"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","sourcesContent":["//resetpassword\n\nimport React, { Component } from \"react\";\nimport { resetpassword } from \"../services/userServices\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: \"\",\n      passwordError: \"\",\n      redirect: false\n    };\n  }\n\n  validate = () => {\n    let isError = false;\n\n    const errors = {\n      passwordError: \"\"\n    };\n\n    if (this.state.password.length < 6 || this.state.password.length > 12) {\n      isError = true;\n\n      errors.passwordError =\n        \"Password length should greater than 6 and less than 12\";\n    }\n\n    this.setState({\n      ...this.state,\n      ...errors\n    });\n\n    console.log(\"In validate----->\" + this.state);\n\n    return isError;\n  };\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      var path = \"/\";\n      this.props.history.push(path);\n    }\n  };\n\n  handlechangeall = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmitButton = event => {\n    event.preventDefault();\n    this.validate();\n    const err = this.validate();\n\n    var resetData = {};\n    resetData.password = this.state.password;\n\n    console.log(\"reset data--> \", resetData);\n\n    let resetToken = this.props.match.params.token;\n    console.log(resetToken);\n\n    resetpassword(resetData, resetToken)\n      .then(res => {\n        console.log(\"response in reset password--> \", res);\n\n        alert(`Password has been reseted`);\n\n        this.setRedirect();\n      })\n      .catch(err => {\n        console.log(\"error in reset--> \", err);\n      });\n\n    if (!err) {\n      // clear form\n      this.setState({\n        password: \"\",\n        passwordError: \"\"\n      });\n    }\n  };\n\n  render() {\n    console.log(this.props.match.params.id);\n    \n    return (\n      <div className=\"maindiv\">\n        <form onSubmit={this.handlesubmit}></form>\n        <div id=\"login\"> Reset Password </div>\n        <div>\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            autoComplete=\"current-password\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handlechangeall}\n          />\n        </div>\n        <div style={{ fontSize: 12, color: \"red\" }}>\n          {this.state.passwordError}\n        </div>\n        <div>\n          {this.renderRedirect()}\n          <Button\n            id=\"signinButton\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleSubmitButton}\n          >\n            Submit\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}