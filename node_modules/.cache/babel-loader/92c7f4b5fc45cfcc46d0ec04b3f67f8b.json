{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport './Dashboard.css';\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [] // messages: \"\",\n      // ReceiverId:\"\",\n      // ReceiverName:\"\"\n\n    };\n  } // setRedirect = () => {\n  //   this.setState({\n  //     redirect: true\n  //   })\n  // }\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //       var path = '/'\n  //       this.props.history.push(path)\n  //   }\n  // }\n\n\n  componentDidMount() {\n    this.getUser();\n    this.getUserMessages(); //================================================================\n\n    apiFunc.receivedMsg((error, result) => {\n      if (result) {\n        console.log(\"result is back...\", result); // console.log(\"in result receiverID\", result.ReceiverId);\n        // console.log(\"in result local storage ID\", localStorage.getItem('SenderId'));\n        // console.log((localStorage.getItem('SenderId') === result.ReceiverId));\n        // if ((localStorage.getItem('SenderId') == result.ReceiverId)) {\n        //     let array = []\n        //     array = this.state.Messages\n        //     console.log(\"Array is \", JSON.stringify(array));\n        //     array.push(result.Messages)\n        //     this.setState({\n        //         Messages: array\n        //     })\n        // }\n        // // if(){\n        // }\n\n        var resultArray = []; // resultArray.push(result);\n\n        resultArray = this.state.Messages;\n        resultArray.push(result);\n        this.setState({\n          Messages: resultArray\n        });\n        console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n      } else {\n        console.log(\"Error in received message--->\", error);\n      }\n    });\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      });\n      console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail = localStorage.getItem('senderEmail');\n    let senderid = localStorage.getItem('senderId');\n    console.log(\"sendermail..\", senderemail);\n    console.log(\"senderId..\", senderid);\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, key.firstName);\n    });\n    console.log(printuser);\n    const messages = this.state.messageArray.map(msg => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, msg.message);\n    });\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Chat Application\"), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"chat box\", messages), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \" type here... \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      value: this.state.messageArray.id,\n      onClick: this.getReceiverId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","openSocket","socket","Dashboard","constructor","props","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","state","userArray","messageArray","componentDidMount","getUser","apiFunc","receivedMsg","error","result","resultArray","Messages","push","setState","JSON","stringify","then","res","data","users","messages","catch","err","getReceiverId","receiverId","getItem","receiver_name","senderemail","senderid","render","printuser","map","msg","message","logOutClick","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './Dashboard.css';\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\n\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\n\n export default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      // messages: \"\",\n      // ReceiverId:\"\",\n      // ReceiverName:\"\"\n\n    };\n  }\n\n  // setRedirect = () => {\n  //   this.setState({\n  //     redirect: true\n  //   })\n    \n  // }\n\n\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //       var path = '/'\n  //       this.props.history.push(path)\n  //   }\n  // }\n\n  componentDidMount() {\n    this.getUser();\n    this.getUserMessages();\n\n\n\n\n      //================================================================\n      apiFunc.receivedMsg((error, result) => {\n\n        if (result) {\n\n            console.log(\"result is back...\", result);\n\n            // console.log(\"in result receiverID\", result.ReceiverId);\n            // console.log(\"in result local storage ID\", localStorage.getItem('SenderId'));\n\n            // console.log((localStorage.getItem('SenderId') === result.ReceiverId));\n\n            // if ((localStorage.getItem('SenderId') == result.ReceiverId)) {\n\n            //     let array = []\n\n            //     array = this.state.Messages\n\n            //     console.log(\"Array is \", JSON.stringify(array));\n\n\n            //     array.push(result.Messages)\n\n            //     this.setState({\n            //         Messages: array\n            //     })\n\n            // }\n            // // if(){\n\n            // }\n\n            var resultArray = [];\n            // resultArray.push(result);\n            resultArray = this.state.Messages;\n\n            resultArray.push(result)\n\n            this.setState({\n                Messages: resultArray\n            })\n\n\n            console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n\n\n        }\n        else {\n            console.log(\"Error in received message--->\", error);\n\n        }\n    })\n   \n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail=localStorage.getItem('senderEmail')\n    let senderid= localStorage.getItem('senderId');\n    console.log(\"sendermail..\",senderemail);\n    console.log(\"senderId..\",senderid);\n    \n    \n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    console.log(printuser);\n    const messages=this.state.messageArray.map(msg=>{\n\n      return <div>{msg.message}</div>\n    })\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          <button className=\"LogOutButton\"onClick={() => this.logOutClick()}>Log Out</button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">chat box\n            \n            {messages}\n            </div>\n            <div className=\"inputStyle\">\n              <input className=\"input\" placeholder=\" type here... \"></input>\n              <button\n                className=\"sendButton\"\n                value={this.state.messageArray.id}\n                onClick={this.getReceiverId}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}