{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/chatappfrontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\"; //import openSocket from \"socket.io-client\";\n// const socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = \"/\";\n        this.props.history.push(path);\n      }\n    };\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.handlechangeall = event => {\n      // console.log(\"value in handle change\", event.currentTarget.value);\n      this.setState({\n        msg: event.currentTarget.value\n      }, () => {// console.log(\"value after set state in handlechange\", this.state.msg);\n      });\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  // componentDidUpdate(){\n  //     this.getUserMessages();\n  // }\n  componentDidMount() {\n    socketApi.socketCon();\n    this.getUser(); // this.getUserMessages();\n    //================================================================\n  } // componentDidUpdate(){\n  //   if(this.state.messageArray.length===this.resultArray.length){\n  //     console.log('jjjjjjj');\n  //     socketApi.receivedMsg(async(error, result) => {\n  //       if (result) {\n  //         // console.log(\"result is back...\", result,this.resultArray.length);\n  //         var senderID=localStorage.getItem('senderId');\n  //         console.log(result.receiverID===senderID);\n  //         if(result.receiverID===senderID){\n  //           await this.resultArray.push(result)\n  //           this.setState({\n  //             messages: this.resultArray\n  //           });\n  //         }\n  //       } else {\n  //         console.log(\"Error in received message--->\", error);\n  //       }\n  //     });\n  //   }\n  // }\n\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      let loginUser = this;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      // console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      this.resultArray = messages; // console.log(\" user messages\", messages);\n\n      this.setState({\n        messageArray: messages\n      }); // console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  sendClick(event) {\n    event.preventDefault();\n    let sendObject = {\n      senderID: localStorage.getItem(\"senderId\"),\n      receiverID: localStorage.getItem(\"receiverid\"),\n      message: this.state.msg\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n    socketApi.Emitfun(sendObject, (err, data) => {\n      console.log(\"data in sendObjec\", data);\n\n      if (data) {\n        // console.log(\"result is back...\", result,this.resultArray.length);\n        let resultArray = this.state.messageArray;\n        var senderID = localStorage.getItem('senderId');\n        console.log(data.receiverID === senderID);\n\n        if (data.receiverID === senderID) {\n          resultArray.push(data);\n          this.setState({\n            messages: resultArray\n          });\n        }\n      } else {\n        console.log(\"Error in received message--->\", err);\n      }\n    }); // console.log(data);\n    // socketApi.receivedMsg();\n    // this.getMessages()\n\n    this.getUserMessages(); // To Make input field clear after sending message\n\n    this.setState({\n      msg: \"\"\n    });\n  }\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map((key, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, key.firstName);\n    }); // console.log(printuser);\n\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, msg.message);\n    }); // console.log(printuser);\n\n    const Messages1 = this.state.messageArray.map((msg, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, msg.senderID === localStorage.getItem(\"senderId\") ? React.createElement(\"div\", {\n        className: \"senderMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, msg.message) : React.createElement(\"div\", {\n        className: \"receiverMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, msg.message));\n    });\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Chat Application\"), this.renderRedirect(), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, Messages1), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \"type here\",\n      value: this.state.msg,\n      onChange: event => {\n        this.handlechangeall(event);\n      },\n      name: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      onClick: event => {\n        this.sendClick(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/chatappfrontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","socketApi","Dashboard","constructor","props","setRedirect","setState","redirect","renderRedirect","state","path","history","push","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","handlechangeall","event","msg","currentTarget","value","userArray","messageArray","componentDidMount","socketCon","getUser","then","res","data","users","loginUser","messages","resultArray","catch","err","sendClick","preventDefault","sendObject","senderID","getItem","receiverID","message","JSON","stringify","Emitfun","logOutClick","clear","render","printuser","map","index","Messages","Messages1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\";\n\n          \n//import openSocket from \"socket.io-client\";\n\n// const socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      var path = \"/\";\n      this.props.history.push(path);\n    }\n  };\n\n  // componentDidUpdate(){\n  //     this.getUserMessages();\n\n  // }\n\n  componentDidMount() {\n    socketApi.socketCon();\n\n    this.getUser();\n    // this.getUserMessages();\n\n    //================================================================\n    \n  }\n\n  // componentDidUpdate(){\n  //   if(this.state.messageArray.length===this.resultArray.length){\n  //     console.log('jjjjjjj');\n      \n  //     socketApi.receivedMsg(async(error, result) => {\n  //       if (result) {\n\n  //         // console.log(\"result is back...\", result,this.resultArray.length);\n          \n  //         var senderID=localStorage.getItem('senderId');\n  //         console.log(result.receiverID===senderID);\n          \n  //         if(result.receiverID===senderID){\n  //           await this.resultArray.push(result)\n  //           this.setState({\n  //             messages: this.resultArray\n  //           });\n    \n  //         }\n  //       } else {\n  //         console.log(\"Error in received message--->\", error);\n  //       }\n  //     });\n  //   }\n  // }\n\n  getUser() {\n    getAllUser().then(res => {\n\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      let loginUser=this\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n    \n\n\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        // console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        this.resultArray=messages;\n        // console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        // console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  handlechangeall = event => {\n    // console.log(\"value in handle change\", event.currentTarget.value);\n\n    this.setState({ msg: event.currentTarget.value }, () => {\n      // console.log(\"value after set state in handlechange\", this.state.msg);\n    });\n  };\n\n  sendClick(event) {\n    event.preventDefault();\n\n    let sendObject ={\n      senderID: localStorage.getItem(\"senderId\"),\n\n      receiverID: localStorage.getItem(\"receiverid\"),\n\n      message: this.state.msg\n    };\n\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n\n     socketApi.Emitfun(sendObject,(err,data)=>{\n       console.log(\"data in sendObjec\",data);\n\n\n       if (data) {\n\n                // console.log(\"result is back...\", result,this.resultArray.length);\n                let resultArray=this.state.messageArray;\n                var senderID=localStorage.getItem('senderId');\n                console.log(data.receiverID===senderID);\n                \n                if(data.receiverID===senderID){\n                  resultArray.push(data)\n                  this.setState({\n                    messages: resultArray\n                  });\n          \n                }\n              } else {\n                console.log(\"Error in received message--->\", err);\n              }\n\n       \n\n    });\n    // console.log(data);\n    \n    // socketApi.receivedMsg();\n    // this.getMessages()\n    this.getUserMessages();\n\n    // To Make input field clear after sending message\n    this.setState({ msg: \"\" });\n  }\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map((key,index) => {\n      return <div key={index} onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    // console.log(printuser);\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return <div key={index}>{msg.message}</div>;\n    });\n\n    // console.log(printuser);\n    const Messages1 = this.state.messageArray.map((msg, index) => {\n      return (\n        <div key={index}>\n          {msg.senderID === localStorage.getItem(\"senderId\") ? (\n            <div className=\"senderMessage\">{msg.message}</div>\n          ) : (\n            <div className=\"receiverMessage\">{msg.message}</div>\n          )}\n          {/* {msg.receiverID===localStorage.getItem('receiveri0d')? (\n            <div className=\"receiverMessage\">{msg.message}</div>\n          ) : null} */}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          {this.renderRedirect()}\n          <button className=\"LogOutButton\" onClick={() => this.logOutClick()}>\n            Log Out\n          </button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">\n              {/* chat box */}\n              {Messages1}\n            </div>\n\n            <div className=\"inputStyle\">\n              <input\n                className=\"input\"\n                placeholder=\"type here\"\n                value={this.state.msg}\n                onChange={event => {\n                  this.handlechangeall(event);\n                }}\n                name=\"msg\"\n              ></input>\n\n              <button\n                className=\"sendButton\"\n                onClick={event => {\n                  this.sendClick(event);\n                }}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}