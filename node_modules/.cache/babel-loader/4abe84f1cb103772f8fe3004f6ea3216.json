{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = '/';\n        this.props.history.push(path);\n      }\n    };\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      messages: \"\",\n      ReceiverId: \"\",\n      ReceiverName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getUserMessages();\n    apiFunc.socketCon();\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      });\n      console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\"); // let receiverId = localStorage.getItem('receiverid');\n    // let receiver_name = localStorage.getItem('receiverName');\n    // console.log(\"receiver name\", receiver_name);\n    // console.log(\"receiverID\", receiverId);\n    // let senderemail=localStorage.getItem('senderEmail')\n    // let senderid= localStorage.getItem('senderId');\n    // console.log(\"sendermail..\",senderemail);\n    // console.log(\"senderId..\",senderid);\n\n    let sendObject = {\n      SenderId: localStorage.getItem(\"SenderId\"),\n      senderemail: localStorage.getItem(\"senderEmail\"),\n      // ReceiverId: this.state.ReceiverId,\n      // ReceiverName: this.state.ReceiverName,\n      Messages: this.state.messages\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, key.firstName);\n    });\n    console.log(printuser);\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Chat Application\"), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"chat box\"), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \" type here... \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      value: this.state.messageArray.id,\n      onClick: this.getReceiverId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","openSocket","socket","Dashboard","constructor","props","setRedirect","setState","redirect","renderRedirect","state","path","history","push","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","userArray","messageArray","messages","ReceiverId","ReceiverName","componentDidMount","getUser","apiFunc","socketCon","then","res","data","users","catch","err","getReceiverId","sendObject","SenderId","getItem","senderemail","Messages","JSON","stringify","render","printuser","map","logOutClick","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\n\n\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\n\n class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      messages: \"\",\n      ReceiverId:\"\",\n      ReceiverName:\"\"\n\n    };\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n    \n  }\n\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n        var path = '/'\n        this.props.history.push(path)\n    }\n  }\n\n  componentDidMount() {\n    this.getUser();\n    this.getUserMessages();\n    apiFunc.socketCon()\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    // let receiverId = localStorage.getItem('receiverid');\n    // let receiver_name = localStorage.getItem('receiverName');\n    // console.log(\"receiver name\", receiver_name);\n    // console.log(\"receiverID\", receiverId);\n    // let senderemail=localStorage.getItem('senderEmail')\n    // let senderid= localStorage.getItem('senderId');\n    // console.log(\"sendermail..\",senderemail);\n    // console.log(\"senderId..\",senderid);\n    let sendObject = {\n      SenderId: localStorage.getItem(\"SenderId\"),\n      senderemail: localStorage.getItem(\"senderEmail\"),\n      // ReceiverId: this.state.ReceiverId,\n      // ReceiverName: this.state.ReceiverName,\n      Messages: this.state.messages\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    console.log(printuser);\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          <button className=\"LogOutButton\"onClick={() => this.logOutClick()}>Log Out</button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">chat box</div>\n            <div className=\"inputStyle\">\n              <input className=\"input\" placeholder=\" type here... \"></input>\n              <button\n                className=\"sendButton\"\n                value={this.state.messageArray.id}\n                onClick={this.getReceiverId}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}