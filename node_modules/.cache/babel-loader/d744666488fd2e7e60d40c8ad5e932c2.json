{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = \"/\";\n        this.props.history.push(path);\n      }\n    };\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.handlechangeall = event => {\n      console.log(\"value in handle change\", event.currentTarget.value);\n      this.setState({\n        msg: event.currentTarget.value\n      }, () => {\n        console.log(\"value after set state in handlechange\", this.state.msg);\n      });\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  // handlechangeall = event => {\n  //   console.log(\"java \", event.target.value);\n  //   this.setState({ [event.target.name]: event.target.value });\n  //   console.log(\" this dot startes\", this.state);\n  // };\n  componentDidMount() {\n    socketApi.socketCon();\n    this.getUser();\n    this.getUserMessages(); //================================================================\n    //   socketApi.receivedMsg((error, result) => {\n    //     if (result) {\n    //       console.log(\"result is back...\", result);\n    //       var resultArray = [];\n    //       resultArray = this.state.Messages;\n    //       resultArray.push(result);\n    //       this.setState({\n    //         messages: resultArray\n    //       });\n    //       console.log(\n    //         \"Received Messages are---->\",\n    //         JSON.stringify(this.state.Messages)\n    //       );\n    //     } else {\n    //       console.log(\"Error in received message--->\", error);\n    //     }\n    //   });\n\n    this.setState({\n      msg: \"\"\n    });\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      });\n      console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  } // getReceiverId() {\n  //   console.log(\"send botton clicked..\");\n  //   let receiverId = localStorage.getItem('receiverid');\n  //   let receiver_name = localStorage.getItem('receiverName');\n  //   console.log(\"receiver name\", receiver_name);\n  //   console.log(\"receiverID\", receiverId);\n  //   let senderemail=localStorage.getItem('senderEmail')\n  //   let senderid= localStorage.getItem('senderId');\n  //   console.log(\"sendermail..\",senderemail);\n  //   console.log(\"senderId..\",senderid);\n  // }\n\n\n  async sendClick(event) {\n    event.preventDefault(); // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n    // console.log(\" this state\",this.msg);\n\n    let sendObject = await {\n      senderID: localStorage.getItem(\"senderId\"),\n      receiverID: localStorage.getItem(\"receiverid\"),\n      message: this.state.msg\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n    socketApi.Emitfun(sendObject); // socketApi.receivedMsg()\n\n    socketApi.receivedMsg((error, result) => {\n      if (result) {\n        console.log(\"result is back...\", result);\n        var resultArray = [];\n        resultArray = this.state.Messages;\n        resultArray.push(result);\n        this.setState({\n          messages: resultArray\n        });\n        console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n      } else {\n        console.log(\"Error in received message--->\", error);\n      }\n    });\n  } // this.getMessages()\n  // this.getUserMessages();\n  // To Make input field clear after sending message\n  //   this.setState({ msg: \"\" });\n  // }\n\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, key.firstName);\n    }); // console.log(printuser);\n\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, msg.message);\n    });\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Chat Application\"), this.renderRedirect(), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"chat box\", Messages), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \"type here\",\n      value: this.state.msg,\n      onChange: event => {\n        this.handlechangeall(event);\n      },\n      name: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      onClick: event => {\n        this.sendClick(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","socketApi","openSocket","socket","Dashboard","constructor","props","setRedirect","setState","redirect","renderRedirect","state","path","history","push","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","handlechangeall","event","currentTarget","value","msg","userArray","messageArray","componentDidMount","socketCon","getUser","then","res","data","users","messages","catch","err","sendClick","preventDefault","sendObject","senderID","getItem","receiverID","message","JSON","stringify","Emitfun","receivedMsg","error","result","resultArray","Messages","logOutClick","clear","render","printuser","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\";\nimport openSocket from \"socket.io-client\";\n\nconst socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      var path = \"/\";\n      this.props.history.push(path);\n    }\n  };\n\n  // handlechangeall = event => {\n  //   console.log(\"java \", event.target.value);\n\n  //   this.setState({ [event.target.name]: event.target.value });\n  //   console.log(\" this dot startes\", this.state);\n  // };\n\n  componentDidMount() {\n    socketApi.socketCon();\n\n    this.getUser();\n    this.getUserMessages();\n  \n    //================================================================\n  //   socketApi.receivedMsg((error, result) => {\n  //     if (result) {\n  //       console.log(\"result is back...\", result);\n\n  //       var resultArray = [];\n\n  //       resultArray = this.state.Messages;\n\n  //       resultArray.push(result);\n\n  //       this.setState({\n  //         messages: resultArray\n  //       });\n\n  //       console.log(\n  //         \"Received Messages are---->\",\n  //         JSON.stringify(this.state.Messages)\n  //       );\n  //     } else {\n  //       console.log(\"Error in received message--->\", error);\n  //     }\n  //   });\n  this.setState({ msg: \"\" });\n   }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  // getReceiverId() {\n  //   console.log(\"send botton clicked..\");\n  //   let receiverId = localStorage.getItem('receiverid');\n  //   let receiver_name = localStorage.getItem('receiverName');\n  //   console.log(\"receiver name\", receiver_name);\n  //   console.log(\"receiverID\", receiverId);\n  //   let senderemail=localStorage.getItem('senderEmail')\n  //   let senderid= localStorage.getItem('senderId');\n  //   console.log(\"sendermail..\",senderemail);\n  //   console.log(\"senderId..\",senderid);\n\n  // }\n\n  handlechangeall = event => {\n    console.log(\"value in handle change\", event.currentTarget.value);\n\n    this.setState({ msg: event.currentTarget.value }, () => {\n      console.log(\"value after set state in handlechange\", this.state.msg);\n    });\n  };\n\n  async sendClick(event) {\n    event.preventDefault();\n    // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n    // console.log(\" this state\",this.msg);\n\n    let sendObject = await {\n      senderID: localStorage.getItem(\"senderId\"),\n\n      receiverID: localStorage.getItem(\"receiverid\"),\n\n      message: this.state.msg\n    };\n\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n\n    socketApi.Emitfun(sendObject);\n    // socketApi.receivedMsg()\n    socketApi.receivedMsg((error, result) => {\n      if (result) {\n        console.log(\"result is back...\", result);\n\n        var resultArray = [];\n\n        resultArray = this.state.Messages;\n\n        resultArray.push(result);\n\n        this.setState({\n          messages: resultArray\n        });\n\n        console.log(\n          \"Received Messages are---->\",\n          JSON.stringify(this.state.Messages)\n        );\n      } else {\n        console.log(\"Error in received message--->\", error);\n      }\n    });\n  }\n\n    // this.getMessages()\n    // this.getUserMessages();\n\n    // To Make input field clear after sending message\n  //   this.setState({ msg: \"\" });\n  // }\n\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    // console.log(printuser);\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return <div key={index}>{msg.message}</div>;\n    });\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          {this.renderRedirect()}\n          <button className=\"LogOutButton\" onClick={() => this.logOutClick()}>\n            Log Out\n          </button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">\n              chat box\n              {Messages}\n            </div>\n            <div className=\"inputStyle\">\n              <input\n                className=\"input\"\n                placeholder=\"type here\"\n                value={this.state.msg}\n                onChange={event => {\n                  this.handlechangeall(event);\n                }}\n                name=\"msg\"\n              ></input>\n\n              <button className=\"sendButton\" onClick={event=>{this.sendClick(event)}}>\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}