{"ast":null,"code":"import _defineProperty from \"/home/admin1/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/admin1/frontend/src/components/ResetPassword.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//resetpassword\nimport React, { Component } from 'react';\nimport { resetpassword } from '../services/userServices';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let isError = false;\n      const errors = {\n        passwordError: \"\"\n      };\n\n      if (this.state.password.length < 6 || this.state.password.length > 12) {\n        isError = true;\n        errors.passwordError = \"Password length should greater than 6 and less than 12\";\n      }\n\n      this.setState(_objectSpread({}, this.state, {}, errors));\n      console.log(\"In validate----->\" + this.state);\n      return isError;\n    };\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = '/';\n        this.props.history.push(path);\n      }\n    };\n\n    this.handlechangeall = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmitButton = event => {\n      event.preventDefault();\n      this.validate();\n      const err = this.validate();\n      var resetData = {};\n      resetData.Password = this.state.password;\n      console.log(\"reset data--> \", resetData);\n      let resetToken = this.props.match.params.token;\n      console.log(resetToken);\n      resetpassword(resetData, resetToken).then(res => {\n        console.log(\"response in reset password--> \", res);\n        alert(\"Password has been reseted\");\n        this.setRedirect();\n      }).catch(err => {\n        console.log(\"error in reset--> \", err);\n      });\n\n      if (!err) {\n        // clear form\n        this.setState({\n          password: \"\",\n          passwordError: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      password: \"\",\n      passwordError: \"\",\n      redirect: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"maindiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handlesubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \" Reset Password \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: this.handlechangeall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        fontSize: 12,\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.passwordError), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(Button, {\n      id: \"signinButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleSubmitButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/home/admin1/frontend/src/components/ResetPassword.jsx"],"names":["React","Component","resetpassword","TextField","Button","ResetPassword","constructor","props","validate","isError","errors","passwordError","state","password","length","setState","console","log","setRedirect","redirect","renderRedirect","path","history","push","handlechangeall","event","target","name","value","handleSubmitButton","preventDefault","err","resetData","Password","resetToken","match","params","token","then","res","alert","catch","render","handlesubmit","fontSize","color"],"mappings":"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","sourcesContent":["//resetpassword\n\n\nimport React, { Component } from 'react';\nimport { resetpassword } from '../services/userServices'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass ResetPassword extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            passwordError: \"\",\n            redirect: false\n        }\n    }\n\n    validate = () => {\n        let isError=false;\n        \n        const errors={\n         passwordError : \"\"\n        };\n\n        if ((this.state.password.length < 6 ) || (this.state.password.length > 12) ){\n            isError=true;\n            \n            errors.passwordError = \"Password length should greater than 6 and less than 12\";\n          }\n    \n          this.setState({\n            ...this.state,\n            ...errors\n          });\n\n          console.log(\"In validate----->\"+this.state);\n          \n      \n          return isError;\n      };\n \n\n\n    setRedirect = () => {\n        this.setState({\n          redirect: true\n        })\n        \n      }\n\n\n      renderRedirect = () => {\n        if (this.state.redirect) {\n            var path = '/'\n            this.props.history.push(path)\n        }\n      }\n\n    handlechangeall = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmitButton=(event)=>{\n\n        event.preventDefault();\n       this.validate()\n     const err = this.validate();\n\n        var resetData = {};\n        resetData.Password = this.state.password;\n    \n        console.log(\"reset data--> \", resetData)\n\n        \n        let resetToken=this.props.match.params.token\n        console.log(resetToken);\n        \n        resetpassword(resetData,resetToken).then((res) => {\n            console.log(\"response in reset password--> \", res)\n\n          \n\n         alert(`Password has been reseted`);  \n\n         this.setRedirect();\n       \n            \n        }).catch((err) => {\n            console.log(\"error in reset--> \",err)\n        })\n\n        if (!err) {\n            // clear form\n            this.setState({\n              password: \"\",\n              passwordError: \"\"\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"maindiv\">\n                <form onSubmit={this.handlesubmit} ></form>\n                <div id=\"login\"> Reset Password </div>\n                <div>\n                    <TextField\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.handlechangeall}\n                    />\n\n                </div>\n                <div style={{ fontSize: 12, color: \"red\" }}>\n            {this.state.passwordError}\n          </div>\n                <div>\n                {this.renderRedirect()}\n                    <Button\n                        id=\"signinButton\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.handleSubmitButton}\n                    >\n                        Submit\n                    </Button>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}