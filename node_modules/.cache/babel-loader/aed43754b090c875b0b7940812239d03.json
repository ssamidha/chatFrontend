{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport './Dashboard.css';\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from '../components/socketApi';\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlechangeall = event => {\n      // console.log(event.target);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      messages: ''\n    };\n  }\n\n  componentDidMount() {\n    socketApi.socketCon();\n    this.getUser();\n    this.getUserMessages(); //================================================================\n\n    socketApi.receivedMsg((error, result) => {\n      if (result) {\n        console.log(\"result is back...\", result);\n        var resultArray = [];\n        resultArray = this.state.Messages;\n        resultArray.push(result);\n        this.setState({\n          messages: resultArray\n        });\n        console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n      } else {\n        console.log(\"Error in received message--->\", error);\n      }\n    });\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      });\n      console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail = localStorage.getItem('senderEmail');\n    let senderid = localStorage.getItem('senderId');\n    console.log(\"sendermail..\", senderemail);\n    console.log(\"senderId..\", senderid);\n  }\n\n  sendClick() {\n    // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n    let sendObject = {\n      SenderID: localStorage.getItem('senderId'),\n      // SenderName: localStorage.getItem('SenderName'),\n      ReceiverID: localStorage.getItem('receiverid'),\n      // ReceiverName: this.state.ReceiverName,\n      Messages: this.state.messages\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n    socketApi.Emitfun(sendObject); // this.getMessages()\n\n    this.getUserMessages(); // To Make input field clear after sending message\n\n    this.setState({\n      messages: \" \"\n    });\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, key.firstName);\n    });\n    console.log(printuser);\n    const messages = this.state.messageArray.map(msg => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, msg.message);\n    });\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Chat Application\"), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"chat box\", messages), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      onChange: this.handlechangeall,\n      name: \"message\",\n      value: this.state.message,\n      placeholder: \"type here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      value: this.state.messageArray.id,\n      onClick: this.sendClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","socketApi","openSocket","socket","Dashboard","constructor","props","handlechangeall","event","setState","target","name","value","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","state","userArray","messageArray","messages","componentDidMount","socketCon","getUser","receivedMsg","error","result","resultArray","Messages","push","JSON","stringify","then","res","data","users","catch","err","getReceiverId","receiverId","getItem","receiver_name","senderemail","senderid","sendClick","sendObject","SenderID","ReceiverID","Emitfun","render","printuser","map","msg","message","logOutClick","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './Dashboard.css';\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from '../components/socketApi';\nimport openSocket from \"socket.io-client\";\n\nconst socket = openSocket(\"http://localhost:7000\");\n\n export default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      messages:''\n      \n\n    };\n  }\n\n\n\n\n  handlechangeall = (event) => {\n\n    // console.log(event.target);\n\n    this.setState({ [event.target.name]: event.target.value })\n}\n\n  componentDidMount() {\n    socketApi.socketCon()\n\n    this.getUser();\n    this.getUserMessages();\n\n\n\n\n      //================================================================\n      socketApi.receivedMsg((error, result) => {\n\n        if (result) {\n\n            console.log(\"result is back...\", result);\n\n    \n\n            var resultArray = [];\n     \n            resultArray = this.state.Messages;\n\n            resultArray.push(result)\n\n            this.setState({\n              messages: resultArray\n            })\n\n\n            console.log(\"Received Messages are---->\", JSON.stringify(this.state.Messages));\n\n\n        }\n        else {\n            console.log(\"Error in received message--->\", error);\n\n        }\n    })\n   \n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail=localStorage.getItem('senderEmail')\n    let senderid= localStorage.getItem('senderId');\n    console.log(\"sendermail..\",senderemail);\n    console.log(\"senderId..\",senderid);\n    \n    \n  }\n\n\n\n\n\n  sendClick() {\n\n    // console.log(\"Receiver data************\"+this.state.ReceiverId+\" \"+this.state.ReceiverName);\n    let sendObject = {\n        SenderID:  localStorage.getItem('senderId'),\n        // SenderName: localStorage.getItem('SenderName'),\n        ReceiverID: localStorage.getItem('receiverid'),\n        // ReceiverName: this.state.ReceiverName,\n        Messages: this.state.messages\n    }\n\n\n\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n\n    socketApi.Emitfun(sendObject);\n\n    // this.getMessages()\n    this.getUserMessages();\n\n    \n    // To Make input field clear after sending message\n    this.setState({messages:\" \"})\n\n\n\n}\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    console.log(printuser);\n    const messages=this.state.messageArray.map(msg=>{\n\n      return <div>{msg.message}</div>\n    })\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          <button className=\"LogOutButton\"onClick={() => this.logOutClick()}>Log Out</button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">chat box\n            \n            {messages}\n            </div>\n            <div className=\"inputStyle\">\n              <input className=\"input\" onChange={this.handlechangeall}\n                             name=\"message\"\n                             value={this.state.message}\n                             placeholder=\"type here\"></input>\n            \n\n              <button\n                className=\"sendButton\"\n                value={this.state.messageArray.id}\n                onClick={this.sendClick}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}