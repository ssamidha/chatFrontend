{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashborad.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      });\n      console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail = localStorage.getItem('senderEmail');\n    let senderid = localStorage.getItem('senderId');\n    console.log(\"sendermail..\", senderemail);\n    console.log(\"senderId..\", senderid);\n    let data = {\n      messges: data.messges\n    };\n    console.log(\"data\");\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, key.firstName);\n    });\n    console.log(printuser);\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Chat Application\"), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"chat box\"), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \" type here... \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      value: this.state.messageArray.id,\n      onClick: this.getReceiverId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","openSocket","socket","Dashboard","constructor","props","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","state","userArray","messageArray","componentDidMount","getUser","then","res","data","users","setState","messages","catch","err","getReceiverId","receiverId","getItem","receiver_name","senderemail","senderid","messges","render","printuser","map","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashborad.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\n\nimport openSocket from \"socket.io-client\";\nconst socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  getReceiverId() {\n    console.log(\"send botton clicked..\");\n    let receiverId = localStorage.getItem('receiverid');\n    let receiver_name = localStorage.getItem('receiverName');\n    console.log(\"receiver name\", receiver_name);\n    console.log(\"receiverID\", receiverId);\n    let senderemail=localStorage.getItem('senderEmail')\n    let senderid= localStorage.getItem('senderId');\n    console.log(\"sendermail..\",senderemail);\n    console.log(\"senderId..\",senderid);\n    let data={\n      messges:data.messges\n    }\n    console.log(\"data\");\n    \n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    console.log(printuser);\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          <button className=\"LogOutButton\">Log Out</button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">chat box</div>\n            <div className=\"inputStyle\">\n              <input className=\"input\" placeholder=\" type here... \"></input>\n              <button\n                className=\"sendButton\"\n                value={this.state.messageArray.id}\n                onClick={this.getReceiverId}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}