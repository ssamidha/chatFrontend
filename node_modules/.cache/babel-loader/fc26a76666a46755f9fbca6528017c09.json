{"ast":null,"code":"var _jsxFileName = \"/home/admin1/frontend/chatappfrontend/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\"; //import openSocket from \"socket.io-client\";\n// const socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        var path = \"/\";\n        this.props.history.push(path);\n      }\n    };\n\n    this.person = key => {\n      console.log(\"on click\", key);\n      localStorage.setItem(\"receiverName\", key.firstName);\n      localStorage.setItem(\"receiverLastName\", key.lastName);\n      localStorage.setItem(\"receiverid\", key._id);\n      localStorage.setItem(\"receiveremail\", key.email);\n      this.getUserMessages();\n    };\n\n    this.handlechangeall = event => {\n      // console.log(\"value in handle change\", event.currentTarget.value);\n      this.setState({\n        msg: event.currentTarget.value\n      }, () => {// console.log(\"value after set state in handlechange\", this.state.msg);\n      });\n    };\n\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  // componentDidUpdate(){\n  //     this.getUserMessages();\n  // }\n  componentDidMount() {\n    socketApi.socketCon();\n    this.getUser();\n    this.getUserMessages(); //================================================================\n  }\n\n  componentDidUpdate() {\n    if (this.state.messageArray.length !== this.state.messageArray.length) {}\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({\n        userArray: users\n      });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  getUserMessages() {\n    getAllMessages().then(res => {\n      // console.log(\"all messges\", res.data.data);\n      var messages = res.data.data;\n      console.log(\" user messages\", messages);\n      this.setState({\n        messageArray: messages\n      }); // console.log(\"in message states\", this.state);\n    }).catch(err => {\n      console.log(\" error \", err);\n    });\n  }\n\n  sendClick(event) {\n    event.preventDefault();\n    let sendObject = {\n      senderID: localStorage.getItem(\"senderId\"),\n      receiverID: localStorage.getItem(\"receiverid\"),\n      message: this.state.msg\n    };\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n    let data = socketApi.Emitfun(sendObject);\n    console.log(data); // socketApi.receivedMsg();\n    // this.getMessages()\n\n    this.getUserMessages(); // To Make input field clear after sending message\n\n    this.setState({\n      msg: \"\"\n    });\n  }\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return React.createElement(\"div\", {\n        onClick: () => this.person(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, key.firstName);\n    }); // console.log(printuser);\n\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, msg.message);\n    }); // console.log(printuser);\n\n    const Messages1 = this.state.messageArray.map((msg, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, msg.senderID === localStorage.getItem(\"senderId\") ? React.createElement(\"div\", {\n        className: \"senderMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, msg.message) : React.createElement(\"div\", {\n        className: \"receiverMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, msg.message));\n    });\n    return React.createElement(\"div\", {\n      className: \"mainchatdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"appBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Chat Application\"), this.renderRedirect(), React.createElement(\"button\", {\n      className: \"LogOutButton\",\n      onClick: () => this.logOutClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Log Out\")), React.createElement(\"div\", {\n      className: \"chatApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"list-username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"div\", {\n      className: \"List\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"List\", printuser)), React.createElement(\"div\", {\n      className: \"chat-box-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ChatBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, Messages1), React.createElement(\"div\", {\n      className: \"inputStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"input\",\n      placeholder: \"type here\",\n      value: this.state.msg,\n      onChange: event => {\n        this.handlechangeall(event);\n      },\n      name: \"msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"sendButton\",\n      onClick: event => {\n        this.sendClick(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"send\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/frontend/chatappfrontend/src/components/Dashboard.js"],"names":["React","Component","getAllUser","getAllMessages","socketApi","Dashboard","constructor","props","setRedirect","setState","redirect","renderRedirect","state","path","history","push","person","key","console","log","localStorage","setItem","firstName","lastName","_id","email","getUserMessages","handlechangeall","event","msg","currentTarget","value","userArray","messageArray","componentDidMount","socketCon","getUser","componentDidUpdate","length","then","res","data","users","messages","catch","err","sendClick","preventDefault","sendObject","senderID","getItem","receiverID","message","JSON","stringify","Emitfun","logOutClick","clear","render","printuser","map","Messages","index","Messages1"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.css\";\nimport { getAllUser, getAllMessages } from \"../services/userServices\";\nimport socketApi from \"../components/socketApi\";\n//import openSocket from \"socket.io-client\";\n\n// const socket = openSocket(\"http://localhost:7000\");\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userArray: [],\n      messageArray: [],\n      redirect: false,\n      msg: \"\"\n    };\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    });\n  };\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      var path = \"/\";\n      this.props.history.push(path);\n    }\n  };\n\n  // componentDidUpdate(){\n  //     this.getUserMessages();\n\n  // }\n\n  componentDidMount() {\n    socketApi.socketCon();\n\n    this.getUser();\n    this.getUserMessages();\n\n    //================================================================\n    \n  }\n\n  componentDidUpdate(){\n    if(this.state.messageArray.length!==this.state.messageArray.length){\n\n    }\n  }\n\n  getUser() {\n    getAllUser().then(res => {\n      console.log(\" response \", res.data.data);\n      var users = res.data.data;\n      console.log(\"users list\", users);\n      this.setState({ userArray: users });\n      console.log(\"in state\", this.state);\n    });\n  }\n\n  person = key => {\n    console.log(\"on click\", key);\n    localStorage.setItem(\"receiverName\", key.firstName);\n    localStorage.setItem(\"receiverLastName\", key.lastName);\n    localStorage.setItem(\"receiverid\", key._id);\n    localStorage.setItem(\"receiveremail\", key.email);\n    this.getUserMessages();\n  };\n\n  getUserMessages() {\n    getAllMessages()\n      .then(res => {\n        // console.log(\"all messges\", res.data.data);\n        var messages = res.data.data;\n        console.log(\" user messages\", messages);\n        this.setState({ messageArray: messages });\n        // console.log(\"in message states\", this.state);\n      })\n\n      .catch(err => {\n        console.log(\" error \", err);\n      });\n  }\n\n  handlechangeall = event => {\n    // console.log(\"value in handle change\", event.currentTarget.value);\n\n    this.setState({ msg: event.currentTarget.value }, () => {\n      // console.log(\"value after set state in handlechange\", this.state.msg);\n    });\n  };\n\n  sendClick(event) {\n    event.preventDefault();\n\n    let sendObject ={\n      senderID: localStorage.getItem(\"senderId\"),\n\n      receiverID: localStorage.getItem(\"receiverid\"),\n\n      message: this.state.msg\n    };\n\n    console.log(\"sendObject------->\" + JSON.stringify(sendObject));\n\n    let data = socketApi.Emitfun(sendObject);\n    console.log(data);\n    \n    // socketApi.receivedMsg();\n    // this.getMessages()\n    this.getUserMessages();\n\n    // To Make input field clear after sending message\n    this.setState({ msg: \"\" });\n  }\n\n  logOutClick() {\n    localStorage.clear();\n    this.setRedirect();\n  }\n\n  render() {\n    const printuser = this.state.userArray.map(key => {\n      return <div onClick={() => this.person(key)}>{key.firstName}</div>;\n    });\n    // console.log(printuser);\n    const Messages = this.state.messageArray.map((msg, index) => {\n      return <div key={index}>{msg.message}</div>;\n    });\n\n    // console.log(printuser);\n    const Messages1 = this.state.messageArray.map((msg, index) => {\n      return (\n        <div>\n          {msg.senderID === localStorage.getItem(\"senderId\") ? (\n            <div className=\"senderMessage\">{msg.message}</div>\n          ) : (\n            <div className=\"receiverMessage\">{msg.message}</div>\n          )}\n          {/* {msg.receiverID===localStorage.getItem('receiveri0d')? (\n            <div className=\"receiverMessage\">{msg.message}</div>\n          ) : null} */}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"mainchatdiv\">\n        <div id=\"appBar\">\n          <p className=\"p\">Chat Application</p>\n          {this.renderRedirect()}\n          <button className=\"LogOutButton\" onClick={() => this.logOutClick()}>\n            Log Out\n          </button>\n        </div>\n        <div className=\"chatApp\">\n          <div className=\"list-username\">\n            <div className=\"users\">Username</div>\n            <div className=\"List\">\n              List\n              {printuser}\n            </div>\n          </div>\n          <div className=\"chat-box-width\">\n            <div className=\"ChatBox\">\n              {/* chat box */}\n              {Messages1}\n            </div>\n\n            <div className=\"inputStyle\">\n              <input\n                className=\"input\"\n                placeholder=\"type here\"\n                value={this.state.msg}\n                onChange={event => {\n                  this.handlechangeall(event);\n                }}\n                name=\"msg\"\n              ></input>\n\n              <button\n                className=\"sendButton\"\n                onClick={event => {\n                  this.sendClick(event);\n                }}\n              >\n                send\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}